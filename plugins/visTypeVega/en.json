{
  "visTypeVega.editor.formatError": "Error formatting spec",
  "visTypeVega.editor.reformatAsHJSONButtonLabel": "Reformat as HJSON",
  "visTypeVega.editor.reformatAsJSONButtonLabel": "Reformat as JSON, delete comments",
  "visTypeVega.editor.vegaDocumentationLinkText": "Vega documentation",
  "visTypeVega.editor.vegaEditorOptionsButtonAriaLabel": "Vega editor options",
  "visTypeVega.editor.vegaHelpButtonAriaLabel": "Vega help",
  "visTypeVega.editor.vegaHelpLinkText": "Kibana Vega help",
  "visTypeVega.editor.vegaLiteDocumentationLinkText": "Vega-Lite documentation",
  "visTypeVega.emsFileParser.emsFileNameDoesNotExistErrorMessage": "{emsfile} {emsfileName} does not exist",
  "visTypeVega.emsFileParser.missingNameOfFileErrorMessage": "{dataUrlParam} with {dataUrlParamValue} requires {nameParam} parameter (name of the file)",
  "visTypeVega.esQueryParser.autointervalValueTypeErrorMessage": "{autointerval} must be either {trueValue} or a number",
  "visTypeVega.esQueryParser.dataUrlMustNotHaveLegacyAndBodyQueryValuesAtTheSameTimeErrorMessage": "{dataUrlParam} must not have legacy {legacyContext} and {bodyQueryConfigName} values at the same time",
  "visTypeVega.esQueryParser.dataUrlMustNotHaveLegacyContextTogetherWithContextOrTimefieldErrorMessage": "{dataUrlParam} must not have {legacyContext} together with {context} or {timefield}",
  "visTypeVega.esQueryParser.legacyContextCanBeTrueErrorMessage": "Legacy {legacyContext} can either be {trueValue} (ignores time range picker), or it can be the name of the time field, e.g. {timestampParam}",
  "visTypeVega.esQueryParser.legacyUrlShouldChangeToWarningMessage": "Legacy {urlParam}: {legacyUrl} should change to {result}",
  "visTypeVega.esQueryParser.shiftMustValueTypeErrorMessage": "{shiftParam} must be a numeric value",
  "visTypeVega.esQueryParser.timefilterValueErrorMessage": "{timefilter} property must be set to {trueValue}, {minValue}, or {maxValue}",
  "visTypeVega.esQueryParser.unknownUnitValueErrorMessage": "Unknown {unitParamName} value. Must be one of: [{unitParamValues}]",
  "visTypeVega.esQueryParser.unnamedRequest": "Unnamed request #{index}",
  "visTypeVega.esQueryParser.urlBodyValueTypeErrorMessage": "{configName} must be an object",
  "visTypeVega.esQueryParser.urlContextAndUrlTimefieldMustNotBeUsedErrorMessage": "{urlContext} and {timefield} must not be used when {queryParam} is set",
  "visTypeVega.function.help": "Vega visualization",
  "visTypeVega.inspector.dataSetsLabel": "Data sets",
  "visTypeVega.inspector.dataViewer.dataSetAriaLabel": "Data set",
  "visTypeVega.inspector.dataViewer.gridAriaLabel": "{name} data grid",
  "visTypeVega.inspector.signalValuesLabel": "Signal values",
  "visTypeVega.inspector.signalViewer.gridAriaLabel": "Signal values data grid",
  "visTypeVega.inspector.specLabel": "Spec",
  "visTypeVega.inspector.specViewer.copyToClipboardLabel": "Copy to clipboard",
  "visTypeVega.inspector.vegaAdapter.signal": "Signal",
  "visTypeVega.inspector.vegaAdapter.value": "Value",
  "visTypeVega.inspector.vegaDebugLabel": "Vega debug",
  "visTypeVega.mapView.experimentalMapLayerInfo": "Map layer is experimental and is not subject to the support SLA of official GA features. For feedback, please create an issue in {githubLink}.",
  "visTypeVega.mapView.mapStyleNotFoundWarningMessage": "{mapStyleParam} was not found",
  "visTypeVega.mapView.minZoomAndMaxZoomHaveBeenSwappedWarningMessage": "{minZoomPropertyName} and {maxZoomPropertyName} have been swapped",
  "visTypeVega.mapView.resettingPropertyToMaxValueWarningMessage": "Resetting {name} to {max}",
  "visTypeVega.mapView.resettingPropertyToMinValueWarningMessage": "Resetting {name} to {min}",
  "visTypeVega.type.vegaDescription": {
    "comment": "Vega and Vega-Lite are product names and should not be translated",
    "text": "Use Vega to create new types of visualizations."
  },
  "visTypeVega.type.vegaNote": "Requires knowledge of Vega syntax.",
  "visTypeVega.type.vegaTitleInWizard": "Custom visualization",
  "visTypeVega.urlParser.dataUrlRequiresUrlParameterInFormErrorMessage": "{dataUrlParam} requires a {urlParam} parameter in a form \"{formLink}\"",
  "visTypeVega.urlParser.urlShouldHaveQuerySubObjectWarningMessage": "Using a {urlObject} should have a {subObjectName} sub-object",
  "visTypeVega.vegaParser.VLCompilerShouldHaveGeneratedSingleProtectionObjectErrorMessage": "Internal error: Vega-Lite compiler should have generated a single projection object",
  "visTypeVega.vegaParser.autoSizeDoesNotAllowFalse": "{autoSizeParam} is enabled, it can only be disabled by setting {autoSizeParam} to {noneParam}",
  "visTypeVega.vegaParser.baseView.externalUrlsAreNotEnabledErrorMessage": "External URLs are not enabled. Add   {enableExternalUrls}   to {kibanaConfigFileName}",
  "visTypeVega.vegaParser.baseView.functionIsNotDefinedForGraphErrorMessage": "{funcName} is not defined for this graph",
  "visTypeVega.vegaParser.baseView.indexNotFoundErrorMessage": "Index {index} not found",
  "visTypeVega.vegaParser.baseView.timeValuesTypeErrorMessage": "Error setting time filter: both time values must be either relative or absolute dates. {start}, {end}",
  "visTypeVega.vegaParser.baseView.unableToFindDefaultIndexErrorMessage": "Unable to find default index",
  "visTypeVega.vegaParser.centerOnMarkConfigValueTypeErrorMessage": "{configName} is expected to be {trueValue}, {falseValue}, or a number",
  "visTypeVega.vegaParser.dataExceedsSomeParamsUseTimesLimitErrorMessage": "Data must not have more than one of {urlParam}, {valuesParam}, and {sourceParam}",
  "visTypeVega.vegaParser.hostConfigIsDeprecatedWarningMessage": "{deprecatedConfigName} has been deprecated. Use {newConfigName} instead.",
  "visTypeVega.vegaParser.hostConfigValueTypeErrorMessage": "If present, {configName} must be an object",
  "visTypeVega.vegaParser.inputSpecDoesNotSpecifySchemaErrorMessage": "Your specification requires a {schemaParam} field with a valid URL for\nVega (see {vegaSchemaUrl}) or\nVega-Lite (see {vegaLiteSchemaUrl}).\nThe URL is an identifier only. Kibana and your browser will never access this URL.",
  "visTypeVega.vegaParser.invalidVegaSpecErrorMessage": "Invalid Vega specification",
  "visTypeVega.vegaParser.kibanaConfigValueTypeErrorMessage": "If present, {configName} must be an object",
  "visTypeVega.vegaParser.maxBoundsValueTypeWarningMessage": "{maxBoundsConfigName} must be an array with four numbers",
  "visTypeVega.vegaParser.notSupportedUrlTypeErrorMessage": "{urlObject} is not supported",
  "visTypeVega.vegaParser.notValidLibraryVersionForInputSpecWarningMessage": "The input spec uses {schemaLibrary} {schemaVersion}, but current version of {schemaLibrary} is {libraryVersion}.",
  "visTypeVega.vegaParser.paddingConfigValueTypeErrorMessage": "{configName} is expected to be a number",
  "visTypeVega.vegaParser.someKibanaConfigurationIsNoValidWarningMessage": "{configName} is not valid",
  "visTypeVega.vegaParser.someKibanaParamValueTypeWarningMessage": "{configName} must be a boolean value",
  "visTypeVega.vegaParser.textTruncateConfigValueTypeErrorMessage": "{configName} is expected to be a boolean",
  "visTypeVega.vegaParser.unexpectedValueForPositionConfigurationErrorMessage": "Unexpected value for the {configurationName} configuration",
  "visTypeVega.vegaParser.unrecognizedControlsLocationValueErrorMessage": "Unrecognized {controlsLocationParam} value. Expecting one of [{locToDirMap}]",
  "visTypeVega.vegaParser.unrecognizedDirValueErrorMessage": "Unrecognized {dirParam} value. Expecting one of [{expectedValues}]",
  "visTypeVega.vegaParser.widthAndHeightParamsAreIgnored": "{widthParam} and {heightParam} params are ignored because {autoSizeParam} is enabled. Set {autoSizeParam}: {noneParam} to disable",
  "visTypeVega.vegaParser.widthAndHeightParamsAreRequired": "Nothing is rendered when {autoSizeParam} is set to {noneParam} while using faceted or repeated {vegaLiteParam} specs. To fix, remove {autoSizeParam} or use {vegaParam}.",
  "visTypeVega.visualization.renderErrorTitle": "Vega error",
  "visTypeVega.visualization.unableToRenderWithoutDataWarningMessage": "Unable to render without data"
}